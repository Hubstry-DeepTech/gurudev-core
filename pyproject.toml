[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "alexandria-lang"
version = "0.1.0"
description = "Biblioteca de Interoperabilidade e Programação Comparada"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Guilherme Gonçalves Machado", email = "guilhermemachado@hubstry.com"}
]
maintainers = [
    {name = "Guilherme Gonçalves Machado", email = "guilhermemachado@hubstry.com"}
]
keywords = [
    "programming languages",
    "comparative analysis", 
    "interoperability",
    "code translation",
    "type mapping",
    "language bridges",
    "programming education",
    "research"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Compilers",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Education",
]
requires-python = ">=3.8"
dependencies = [
    "typing-extensions>=4.0.0",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "click>=8.0.0",
    "rich>=10.0.0",
    "tqdm>=4.62.0",
    "jsonschema>=3.2.0",
    "loguru>=0.5.0",
    "pyyaml>=5.4.0",
    "pydantic>=1.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
visualization = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/Hubstry-DeepTech/gurudev-core"
Documentation = "https://github.com/Hubstry-DeepTech/gurudev-core/tree/main/alexandria"
Repository = "https://github.com/Hubstry-DeepTech/gurudev-core"
"Bug Tracker" = "https://github.com/Hubstry-DeepTech/gurudev-core/issues"

[project.scripts]
alexandria = "alexandria.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["alexandria*"]

[tool.setuptools.package-data]
alexandria = ["data/*.json", "docs/*.md"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["alexandria"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 